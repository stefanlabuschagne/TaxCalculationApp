// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1200:Using directives should be placed correctly", Justification = "<Pending>")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.#ctor(Microsoft.Extensions.Logging.ILogger{BackendAPI.Controllers.TaxCalculationController},BackendAPI.Domain.Repository.IUnitOfWork,BackendAPI.Services.ITaxService)")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.HttpGet~System.Collections.Generic.List{BackendAPI.Models.DTO.Response.TaxCalcultionResponse}")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.HttpPost(BackendAPI.Models.DTO.Request.TaxCalculationRequest)~Microsoft.AspNetCore.Mvc.IActionResult")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Context.TaxDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackendAPI.Data.Context.TaxDbContext})")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Context.TaxDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.#ctor(BackendAPI.Data.Context.TaxDbContext)")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.Add(`0)")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.GetAll~System.Collections.Generic.IEnumerable{`0}")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.TaxRecordRepository.#ctor(BackendAPI.Data.Context.TaxDbContext)")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.#ctor(BackendAPI.Data.Context.TaxDbContext)")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.Dispose")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.Save~System.Int32")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Domain.Repository.IGenericRepository`1.Add(`0)")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Domain.Repository.IGenericRepository`1.GetAll~System.Collections.Generic.IEnumerable{`0}")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Domain.Repository.IUnitOfWork.Save~System.Int32")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Program.Main(System.String[])")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.Factory.ITaxCalculatorFactory.CalcuateTaxRateBasedOnType(System.String)~BackendAPI.Models.TaxCalculation.ITaxCalculation")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.Factory.TaxCalculatorFactory.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.Factory.TaxCalculatorFactory.CalcuateTaxRateBasedOnType(System.String)~BackendAPI.Models.TaxCalculation.ITaxCalculation")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.ITaxService.CalculateTax(System.Decimal,System.String)~System.Boolean")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.TaxService.#ctor(BackendAPI.Data.Context.TaxDbContext,BackendAPI.Services.Factory.ITaxCalculatorFactory)")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.TaxService.CalculateTax(System.Decimal,System.String)~System.Boolean")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Data.Implementation.UnitOfWork.TaxRecord")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.Id")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.PostalCode")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.TaxCalculated")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.TimeCalculated")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Repository.IUnitOfWork.TaxRecord")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.ResponseMessage")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.Sucsess")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.TaxAmountDue")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Services.Factory.TaxCalculatorFactory.PostalCodes")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Controllers.TaxCalculationController")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Data.Context.TaxDbContext")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Data.Implementation.GenericRepository`1")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Data.Implementation.TaxRecordRepository")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Data.Implementation.UnitOfWork")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Domain.Entities.TaxRecord")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Domain.Repository.IGenericRepository`1")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Domain.Repository.IUnitOfWork")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.DTO.Response.TaxCalcultionResponse")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Program")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Services.Factory.ITaxCalculatorFactory")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Services.Factory.TaxCalculatorFactory")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Services.ITaxService")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Services.TaxService")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.#ctor(Microsoft.Extensions.Logging.ILogger{BackendAPI.Controllers.TaxCalculationController},BackendAPI.Domain.Repository.IUnitOfWork,BackendAPI.Services.ITaxService)")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.HttpGet~System.Collections.Generic.List{BackendAPI.Models.DTO.Response.TaxCalcultionResponse}")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.HttpPost(BackendAPI.Models.DTO.Request.TaxCalculationRequest)~Microsoft.AspNetCore.Mvc.IActionResult")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.#ctor(BackendAPI.Data.Context.TaxDbContext)")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.Add(`0)")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.GetAll~System.Collections.Generic.IEnumerable{`0}")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.#ctor(BackendAPI.Data.Context.TaxDbContext)")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.Dispose")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.Save~System.Int32")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.FlatRate.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.FlatValue.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.Progressive.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.Factory.TaxCalculatorFactory.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.Factory.TaxCalculatorFactory.CalcuateTaxRateBasedOnType(System.String)~BackendAPI.Models.TaxCalculation.ITaxCalculation")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.TaxService.#ctor(BackendAPI.Data.Context.TaxDbContext,BackendAPI.Services.Factory.ITaxCalculatorFactory)")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.TaxService.CalculateTax(System.Decimal,System.String)~System.Boolean")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.TaxCalculation.FlatRate.BackendAPI#Models#TaxCalculation#ITaxCalculation#TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.TaxCalculation.FlatValue.TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.TaxCalculation.Progressive.BackendAPI#Models#TaxCalculation#ITaxCalculation#TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1503:Braces should not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.HttpPost(BackendAPI.Models.DTO.Request.TaxCalculationRequest)~Microsoft.AspNetCore.Mvc.IActionResult")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1503:Braces should not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.FlatValue.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1503:Braces should not be omitted", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.Progressive.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1404:Code analysis suppression should have justification", Justification = "<Pending>")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.#ctor(Microsoft.Extensions.Logging.ILogger{BackendAPI.Controllers.TaxCalculationController},BackendAPI.Domain.Repository.IUnitOfWork,BackendAPI.Services.ITaxService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.HttpGet~System.Collections.Generic.List{BackendAPI.Models.DTO.Response.TaxCalcultionResponse}")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.HttpPost(BackendAPI.Models.DTO.Request.TaxCalculationRequest)~Microsoft.AspNetCore.Mvc.IActionResult")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Context.TaxDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackendAPI.Data.Context.TaxDbContext})")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Context.TaxDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.#ctor(BackendAPI.Data.Context.TaxDbContext)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.Add(`0)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.GenericRepository`1.GetAll~System.Collections.Generic.IEnumerable{`0}")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.TaxRecordRepository.#ctor(BackendAPI.Data.Context.TaxDbContext)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.#ctor(BackendAPI.Data.Context.TaxDbContext)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.Dispose")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Implementation.UnitOfWork.Save~System.Int32")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Domain.Repository.IGenericRepository`1.Add(`0)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Domain.Repository.IGenericRepository`1.GetAll~System.Collections.Generic.IEnumerable{`0}")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Domain.Repository.IUnitOfWork.Save~System.Int32")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.FlatRate.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.FlatValue.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.ITaxCalculation.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Models.TaxCalculation.Progressive.CalculateTax~System.Decimal")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Program.Main(System.String[])")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.Factory.ITaxCalculatorFactory.CalcuateTaxRateBasedOnType(System.String)~BackendAPI.Models.TaxCalculation.ITaxCalculation")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.Factory.TaxCalculatorFactory.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.Factory.TaxCalculatorFactory.CalcuateTaxRateBasedOnType(System.String)~BackendAPI.Models.TaxCalculation.ITaxCalculation")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.ITaxService.CalculateTax(System.Decimal,System.String)~System.Boolean")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.TaxService.#ctor(BackendAPI.Data.Context.TaxDbContext,BackendAPI.Services.Factory.ITaxCalculatorFactory)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Services.TaxService.CalculateTax(System.Decimal,System.String)~System.Boolean")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Data.Context.TaxDbContext.TaxRecord")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Data.Implementation.UnitOfWork.TaxRecord")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.Id")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.PostalCode")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.TaxCalculated")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.TimeCalculated")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Repository.IUnitOfWork.TaxRecord")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Request.TaxCalculationRequest.PostalCode")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Request.TaxCalculationRequest.TaxableIncome")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.TaxCalculation.FlatRate.BackendAPI#Models#TaxCalculation#ITaxCalculation#TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.TaxCalculation.FlatValue.TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.TaxCalculation.ITaxCalculation.TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.TaxCalculation.Progressive.BackendAPI#Models#TaxCalculation#ITaxCalculation#TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Services.Factory.TaxCalculatorFactory.PostalCodes")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Controllers.TaxCalculationController")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Data.Context.TaxDbContext")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Data.Implementation.GenericRepository`1")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Data.Implementation.TaxRecordRepository")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Data.Implementation.UnitOfWork")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Domain.Entities.TaxRecord")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Domain.Repository.IGenericRepository`1")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Domain.Repository.ITaxRecordRepository")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Domain.Repository.IUnitOfWork")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.DTO.Request.TaxCalculationRequest")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.DTO.Response.TaxCalcultionResponse")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.TaxCalculation.FlatRate")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.TaxCalculation.FlatValue")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.TaxCalculation.ITaxCalculation")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.TaxCalculation.Progressive")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Program")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Services.Factory.ITaxCalculatorFactory")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Services.Factory.TaxCalculatorFactory")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Services.ITaxService")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Services.TaxService")]
[assembly: SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1400:Access modifier should be declared", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Data.Implementation.UnitOfWork._context")]
[assembly: SuppressMessage("Compiler", "CS8618:Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Data.Context.TaxDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackendAPI.Data.Context.TaxDbContext})")]
[assembly: SuppressMessage("Compiler", "CS8618:Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Domain.Entities.TaxRecord.PostalCode")]
[assembly: SuppressMessage("Compiler", "CS8618:Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Request.TaxCalculationRequest.PostalCode")]
[assembly: SuppressMessage("Compiler", "CS8618:Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.ResponseMessage")]
[assembly: SuppressMessage("CodeQuality", "IDE0051:Remove unused private members", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.ResponseMessage")]
[assembly: SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1400:Access modifier should be declared", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.ResponseMessage")]
[assembly: SuppressMessage("Compiler", "CS8618:Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.Sucsess")]
[assembly: SuppressMessage("CodeQuality", "IDE0051:Remove unused private members", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.Sucsess")]
[assembly: SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1400:Access modifier should be declared", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.Sucsess")]
[assembly: SuppressMessage("CodeQuality", "IDE0051:Remove unused private members", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.TaxAmountDue")]
[assembly: SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1400:Access modifier should be declared", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalcultionResponse.TaxAmountDue")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1101:Prefix local calls with this", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.#ctor(Microsoft.Extensions.Logging.ILogger{BackendAPI.Controllers.TaxCalculationController},BackendAPI.Services.ITaxService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1633:File should have header", Justification = "<Pending>")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1633:File should have header", Justification = "<Pending>", Scope = "namespace", Target = "~N:BackendAPI.Domain.Repository")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1633:File should have header", Justification = "<Pending>", Scope = "namespace", Target = "~N:BackendAPI.Models.DTO.Response")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1633:File should have header", Justification = "<Pending>", Scope = "namespace", Target = "~N:BackendAPI.Models.TaxCalculation")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1633:File should have header", Justification = "<Pending>", Scope = "namespace", Target = "~N:BackendAPI.Services")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.DTO.Response.TaxCalculationResponse")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1649:File name should match first type name", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.DTO.Response.TaxCalculationResponse")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalculationResponse.ResponseMessage")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalculationResponse.Sucsess")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.DTO.Response.TaxCalculationResponse.TaxAmountDue")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1027:Use tabs correctly", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Models.DTO.Response.TaxCalculationResponse")]
[assembly: SuppressMessage("Style", "IDE0044:Add readonly modifier", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Data.Implementation.UnitOfWork._context")]
[assembly: SuppressMessage("Style", "IDE0044:Add readonly modifier", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Services.Factory.TaxCalculatorFactory.entityTypeMapper")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Services.Factory.TaxCalculatorFactory.entityTypeMapper")]
[assembly: SuppressMessage("Style", "IDE0044:Add readonly modifier", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Services.TaxService._dbContext")]
[assembly: SuppressMessage("Style", "IDE0044:Add readonly modifier", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Services.TaxService._taxCalculatorFactory")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~P:BackendAPI.Models.TaxCalculation.FlatValue.TaxableAmount")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Controllers.TaxCalculationController._logger")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Controllers.TaxCalculationController._taxService")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Data.Implementation.GenericRepository`1._context")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Data.Implementation.UnitOfWork._context")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Models.TaxCalculation.FlatRate._taxableamount")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Models.TaxCalculation.FlatValue._taxableamount")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Models.TaxCalculation.Progressive._taxableamount")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Services.TaxService._dbContext")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1309:Field names should not begin with underscore", Justification = "<Pending>", Scope = "member", Target = "~F:BackendAPI.Services.TaxService._taxCalculatorFactory")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1137:Elements should have the same indentation", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Migrations.CreatingDb.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1137:Elements should have the same indentation", Justification = "<Pending>", Scope = "type", Target = "~T:BackendAPI.Controllers.TaxCalculationController")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1519:Braces should not be omitted from multi-line child statement", Justification = "<Pending>", Scope = "member", Target = "~M:BackendAPI.Controllers.TaxCalculationController.HttpPost(BackendAPI.Models.DTO.Request.TaxCalculationRequest)~Microsoft.AspNetCore.Mvc.IActionResult")]
